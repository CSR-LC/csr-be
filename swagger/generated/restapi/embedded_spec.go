// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "The API provides CSR backend API.\n",
    "title": "Be",
    "version": "0.0.1"
  },
  "basePath": "/api/",
  "paths": {
    "/equipment/kinds": {
      "get": {
        "tags": [
          "Kinds"
        ],
        "summary": "Get all kinds.",
        "operationId": "GetAllKinds",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListOfKinds"
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Kinds"
        ],
        "summary": "Create a new kind.",
        "operationId": "CreateNewKind",
        "parameters": [
          {
            "description": "Name of a kind",
            "name": "name",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateNewKind"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateNewKindResponse"
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/equipment/kinds/{kindId}": {
      "get": {
        "tags": [
          "Kinds"
        ],
        "summary": "Get information about the kind of equipment by id.",
        "operationId": "getKindByID",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetKindByIDResponse"
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Kinds"
        ],
        "summary": "Delete kind of equipment from db by id.",
        "operationId": "deleteKind",
        "responses": {
          "201": {
            "description": "kind of equipment successfully deleted from db",
            "schema": {
              "$ref": "#/definitions/DeleteKindResponse"
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Kinds"
        ],
        "summary": "Edit equipment kind by id.",
        "operationId": "PatchKind",
        "parameters": [
          {
            "name": "patchTask",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PatchTask"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PatchKindResponse"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "description": "kind id",
          "name": "kindId",
          "in": "path",
          "required": true
        }
      ]
    },
    "/equipment/statuses": {
      "get": {
        "tags": [
          "Status"
        ],
        "summary": "List all statuses.",
        "operationId": "GetStatuses",
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListStatuses"
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Status"
        ],
        "summary": "Creating a new status.",
        "operationId": "postStatus",
        "parameters": [
          {
            "description": "Status Name",
            "name": "name",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StatusName"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Status has been created",
            "schema": {
              "$ref": "#/definitions/SuccessStatusOperationResponse"
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/equipment/statuses/{statusId}": {
      "get": {
        "tags": [
          "Status"
        ],
        "summary": "Get status by id",
        "operationId": "GetStatus",
        "responses": {
          "201": {
            "description": "Status has been created",
            "schema": {
              "$ref": "#/definitions/SuccessStatusOperationResponse"
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Status"
        ],
        "summary": "Delete status by id",
        "operationId": "DeleteStatus",
        "responses": {
          "201": {
            "description": "Status has been created",
            "schema": {
              "$ref": "#/definitions/SuccessStatusOperationResponse"
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "description": "status id",
          "name": "statusId",
          "in": "path",
          "required": true
        }
      ]
    },
    "/v1/management/users/{userId}/role": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "tags": [
          "Users"
        ],
        "summary": "Assign role to user",
        "operationId": "AssignRoleToUser",
        "parameters": [
          {
            "description": "Role to assign to user.",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AssignRoleToUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Role has been assigned to user",
            "schema": {
              "$ref": "#/definitions/GetUserResponse"
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "integer",
          "description": "user id",
          "name": "userId",
          "in": "path",
          "required": true
        }
      ]
    },
    "/v1/roles": {
      "get": {
        "tags": [
          "Roles"
        ],
        "summary": "List all roles.",
        "operationId": "GetRoles",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListRoles"
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/v1/users": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Register a new user.",
        "operationId": "postUser",
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/CreateUserResponse"
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/v1/users/me": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Users"
        ],
        "summary": "Get the current user data.",
        "operationId": "getCurrentUser",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetUserResponse"
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "tags": [
          "Users"
        ],
        "summary": "Edit selected fields of the current user.",
        "operationId": "patchUser",
        "parameters": [
          {
            "description": "The patch to apply to the user.",
            "name": "userPatch",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PatchRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AssignRoleToUser": {
      "type": "object",
      "required": [
        "roleId"
      ],
      "properties": {
        "roleId": {
          "type": "integer"
        }
      }
    },
    "CreateNewKind": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/Kind"
        }
      }
    },
    "CreateNewKindResponse": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/Kind"
        }
      }
    },
    "CreateUserResponse": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "type": "object",
          "required": [
            "id"
          ],
          "properties": {
            "id": {
              "type": "integer"
            }
          }
        }
      }
    },
    "DeleteKindResponse": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/Kind"
        }
      }
    },
    "Error": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "type": "object",
          "properties": {
            "correlationId": {
              "type": "string"
            },
            "message": {
              "type": "string"
            }
          }
        }
      }
    },
    "GetKindByIDResponse": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/Kind"
        }
      }
    },
    "GetUserResponse": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/User"
        }
      }
    },
    "Kind": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "id": {
          "type": "integer"
        },
        "max_reservation_time": {
          "type": "integer"
        },
        "max_reservation_units": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "ListOfKinds": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Kind"
      }
    },
    "ListRoles": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Role"
      }
    },
    "ListStatuses": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Status"
      }
    },
    "PatchItem": {
      "description": "A JSONPatch document as defined by RFC 6902",
      "type": "object",
      "required": [
        "op",
        "path"
      ],
      "properties": {
        "from": {
          "description": "A string containing a JSON Pointer value",
          "type": "string"
        },
        "op": {
          "description": "The operation to be performed",
          "type": "string",
          "enum": [
            "add",
            "remove",
            "replace",
            "move",
            "copy",
            "test"
          ]
        },
        "path": {
          "description": "A JSON-Pointer",
          "type": "string"
        },
        "value": {
          "description": "The value to be used within the operations",
          "type": "object"
        }
      }
    },
    "PatchKindResponse": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/Kind"
        }
      }
    },
    "PatchRequest": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/PatchItem"
      }
    },
    "PatchTask": {
      "description": "Patch task object (adding max reservation time and max reservation units)",
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "type": "object",
          "properties": {
            "max_reservation_time": {
              "description": "max reservation time field",
              "type": "integer"
            },
            "max_reservation_units": {
              "description": "max reservation units field",
              "type": "integer"
            }
          }
        }
      }
    },
    "Role": {
      "type": "object",
      "required": [
        "id",
        "name",
        "slug"
      ],
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "slug": {
          "type": "string"
        }
      }
    },
    "Status": {
      "type": "object",
      "required": [
        "id",
        "name"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "StatusName": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "SuccessStatusOperationResponse": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/Status"
        }
      }
    },
    "User": {
      "type": "object",
      "required": [
        "id",
        "createTime",
        "roleId"
      ],
      "properties": {
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "integer"
        },
        "roleId": {
          "type": "integer"
        }
      }
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "The API provides CSR backend API.\n",
    "title": "Be",
    "version": "0.0.1"
  },
  "basePath": "/api/",
  "paths": {
    "/equipment/kinds": {
      "get": {
        "tags": [
          "Kinds"
        ],
        "summary": "Get all kinds.",
        "operationId": "GetAllKinds",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListOfKinds"
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Kinds"
        ],
        "summary": "Create a new kind.",
        "operationId": "CreateNewKind",
        "parameters": [
          {
            "description": "Name of a kind",
            "name": "name",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateNewKind"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateNewKindResponse"
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/equipment/kinds/{kindId}": {
      "get": {
        "tags": [
          "Kinds"
        ],
        "summary": "Get information about the kind of equipment by id.",
        "operationId": "getKindByID",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetKindByIDResponse"
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Kinds"
        ],
        "summary": "Delete kind of equipment from db by id.",
        "operationId": "deleteKind",
        "responses": {
          "201": {
            "description": "kind of equipment successfully deleted from db",
            "schema": {
              "$ref": "#/definitions/DeleteKindResponse"
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Kinds"
        ],
        "summary": "Edit equipment kind by id.",
        "operationId": "PatchKind",
        "parameters": [
          {
            "name": "patchTask",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PatchTask"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PatchKindResponse"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "description": "kind id",
          "name": "kindId",
          "in": "path",
          "required": true
        }
      ]
    },
    "/equipment/statuses": {
      "get": {
        "tags": [
          "Status"
        ],
        "summary": "List all statuses.",
        "operationId": "GetStatuses",
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListStatuses"
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Status"
        ],
        "summary": "Creating a new status.",
        "operationId": "postStatus",
        "parameters": [
          {
            "description": "Status Name",
            "name": "name",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StatusName"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Status has been created",
            "schema": {
              "$ref": "#/definitions/SuccessStatusOperationResponse"
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/equipment/statuses/{statusId}": {
      "get": {
        "tags": [
          "Status"
        ],
        "summary": "Get status by id",
        "operationId": "GetStatus",
        "responses": {
          "201": {
            "description": "Status has been created",
            "schema": {
              "$ref": "#/definitions/SuccessStatusOperationResponse"
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Status"
        ],
        "summary": "Delete status by id",
        "operationId": "DeleteStatus",
        "responses": {
          "201": {
            "description": "Status has been created",
            "schema": {
              "$ref": "#/definitions/SuccessStatusOperationResponse"
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "description": "status id",
          "name": "statusId",
          "in": "path",
          "required": true
        }
      ]
    },
    "/v1/management/users/{userId}/role": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "tags": [
          "Users"
        ],
        "summary": "Assign role to user",
        "operationId": "AssignRoleToUser",
        "parameters": [
          {
            "description": "Role to assign to user.",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AssignRoleToUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Role has been assigned to user",
            "schema": {
              "$ref": "#/definitions/GetUserResponse"
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "integer",
          "description": "user id",
          "name": "userId",
          "in": "path",
          "required": true
        }
      ]
    },
    "/v1/roles": {
      "get": {
        "tags": [
          "Roles"
        ],
        "summary": "List all roles.",
        "operationId": "GetRoles",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListRoles"
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/v1/users": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Register a new user.",
        "operationId": "postUser",
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/CreateUserResponse"
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/v1/users/me": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Users"
        ],
        "summary": "Get the current user data.",
        "operationId": "getCurrentUser",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetUserResponse"
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "tags": [
          "Users"
        ],
        "summary": "Edit selected fields of the current user.",
        "operationId": "patchUser",
        "parameters": [
          {
            "description": "The patch to apply to the user.",
            "name": "userPatch",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PatchRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AssignRoleToUser": {
      "type": "object",
      "required": [
        "roleId"
      ],
      "properties": {
        "roleId": {
          "type": "integer"
        }
      }
    },
    "CreateNewKind": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/Kind"
        }
      }
    },
    "CreateNewKindResponse": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/Kind"
        }
      }
    },
    "CreateUserResponse": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "type": "object",
          "required": [
            "id"
          ],
          "properties": {
            "id": {
              "type": "integer"
            }
          }
        }
      }
    },
    "CreateUserResponseData": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "type": "integer"
        }
      }
    },
    "DeleteKindResponse": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/Kind"
        }
      }
    },
    "Error": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "type": "object",
          "properties": {
            "correlationId": {
              "type": "string"
            },
            "message": {
              "type": "string"
            }
          }
        }
      }
    },
    "ErrorData": {
      "type": "object",
      "properties": {
        "correlationId": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "GetKindByIDResponse": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/Kind"
        }
      }
    },
    "GetUserResponse": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/User"
        }
      }
    },
    "Kind": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "id": {
          "type": "integer"
        },
        "max_reservation_time": {
          "type": "integer"
        },
        "max_reservation_units": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "ListOfKinds": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Kind"
      }
    },
    "ListRoles": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Role"
      }
    },
    "ListStatuses": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Status"
      }
    },
    "PatchItem": {
      "description": "A JSONPatch document as defined by RFC 6902",
      "type": "object",
      "required": [
        "op",
        "path"
      ],
      "properties": {
        "from": {
          "description": "A string containing a JSON Pointer value",
          "type": "string"
        },
        "op": {
          "description": "The operation to be performed",
          "type": "string",
          "enum": [
            "add",
            "remove",
            "replace",
            "move",
            "copy",
            "test"
          ]
        },
        "path": {
          "description": "A JSON-Pointer",
          "type": "string"
        },
        "value": {
          "description": "The value to be used within the operations",
          "type": "object"
        }
      }
    },
    "PatchKindResponse": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/Kind"
        }
      }
    },
    "PatchRequest": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/PatchItem"
      }
    },
    "PatchTask": {
      "description": "Patch task object (adding max reservation time and max reservation units)",
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "type": "object",
          "properties": {
            "max_reservation_time": {
              "description": "max reservation time field",
              "type": "integer"
            },
            "max_reservation_units": {
              "description": "max reservation units field",
              "type": "integer"
            }
          }
        }
      }
    },
    "PatchTaskData": {
      "type": "object",
      "properties": {
        "max_reservation_time": {
          "description": "max reservation time field",
          "type": "integer"
        },
        "max_reservation_units": {
          "description": "max reservation units field",
          "type": "integer"
        }
      }
    },
    "Role": {
      "type": "object",
      "required": [
        "id",
        "name",
        "slug"
      ],
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "slug": {
          "type": "string"
        }
      }
    },
    "Status": {
      "type": "object",
      "required": [
        "id",
        "name"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "StatusName": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "SuccessStatusOperationResponse": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/Status"
        }
      }
    },
    "User": {
      "type": "object",
      "required": [
        "id",
        "createTime",
        "roleId"
      ],
      "properties": {
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "integer"
        },
        "roleId": {
          "type": "integer"
        }
      }
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  }
}`))
}
