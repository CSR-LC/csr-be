// Code generated by go-swagger; DO NOT EDIT.

package status

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"git.epam.com/epm-lstr/epm-lstr-lc/be/swagger/generated/models"
)

// GetStatusesCreatedCode is the HTTP code returned for type GetStatusesCreated
const GetStatusesCreatedCode int = 201

/*GetStatusesCreated Success

swagger:response getStatusesCreated
*/
type GetStatusesCreated struct {

	/*
	  In: Body
	*/
	Payload models.ListStatuses `json:"body,omitempty"`
}

// NewGetStatusesCreated creates GetStatusesCreated with default headers values
func NewGetStatusesCreated() *GetStatusesCreated {

	return &GetStatusesCreated{}
}

// WithPayload adds the payload to the get statuses created response
func (o *GetStatusesCreated) WithPayload(payload models.ListStatuses) *GetStatusesCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get statuses created response
func (o *GetStatusesCreated) SetPayload(payload models.ListStatuses) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetStatusesCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = models.ListStatuses{}
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

/*GetStatusesDefault Unexpected error.

swagger:response getStatusesDefault
*/
type GetStatusesDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetStatusesDefault creates GetStatusesDefault with default headers values
func NewGetStatusesDefault(code int) *GetStatusesDefault {
	if code <= 0 {
		code = 500
	}

	return &GetStatusesDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get statuses default response
func (o *GetStatusesDefault) WithStatusCode(code int) *GetStatusesDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get statuses default response
func (o *GetStatusesDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get statuses default response
func (o *GetStatusesDefault) WithPayload(payload *models.Error) *GetStatusesDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get statuses default response
func (o *GetStatusesDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetStatusesDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
