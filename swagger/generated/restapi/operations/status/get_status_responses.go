// Code generated by go-swagger; DO NOT EDIT.

package status

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"git.epam.com/epm-lstr/epm-lstr-lc/be/swagger/generated/models"
)

// GetStatusCreatedCode is the HTTP code returned for type GetStatusCreated
const GetStatusCreatedCode int = 201

/*GetStatusCreated Status has been created

swagger:response getStatusCreated
*/
type GetStatusCreated struct {

	/*
	  In: Body
	*/
	Payload *models.SuccessStatusOperationResponse `json:"body,omitempty"`
}

// NewGetStatusCreated creates GetStatusCreated with default headers values
func NewGetStatusCreated() *GetStatusCreated {

	return &GetStatusCreated{}
}

// WithPayload adds the payload to the get status created response
func (o *GetStatusCreated) WithPayload(payload *models.SuccessStatusOperationResponse) *GetStatusCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get status created response
func (o *GetStatusCreated) SetPayload(payload *models.SuccessStatusOperationResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetStatusCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetStatusDefault Unexpected error.

swagger:response getStatusDefault
*/
type GetStatusDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetStatusDefault creates GetStatusDefault with default headers values
func NewGetStatusDefault(code int) *GetStatusDefault {
	if code <= 0 {
		code = 500
	}

	return &GetStatusDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get status default response
func (o *GetStatusDefault) WithStatusCode(code int) *GetStatusDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get status default response
func (o *GetStatusDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get status default response
func (o *GetStatusDefault) WithPayload(payload *models.Error) *GetStatusDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get status default response
func (o *GetStatusDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetStatusDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
