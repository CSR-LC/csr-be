// Code generated by go-swagger; DO NOT EDIT.

package active_areas

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetAllActiveAreasHandlerFunc turns a function with the right signature into a get all active areas handler
type GetAllActiveAreasHandlerFunc func(GetAllActiveAreasParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetAllActiveAreasHandlerFunc) Handle(params GetAllActiveAreasParams) middleware.Responder {
	return fn(params)
}

// GetAllActiveAreasHandler interface for that can handle valid get all active areas params
type GetAllActiveAreasHandler interface {
	Handle(GetAllActiveAreasParams) middleware.Responder
}

// NewGetAllActiveAreas creates a new http.Handler for the get all active areas operation
func NewGetAllActiveAreas(ctx *middleware.Context, handler GetAllActiveAreasHandler) *GetAllActiveAreas {
	return &GetAllActiveAreas{Context: ctx, Handler: handler}
}

/* GetAllActiveAreas swagger:route GET /v1/active_areas Active_Areas getAllActiveAreas

Get all active areas.

*/
type GetAllActiveAreas struct {
	Context *middleware.Context
	Handler GetAllActiveAreasHandler
}

func (o *GetAllActiveAreas) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewGetAllActiveAreasParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
