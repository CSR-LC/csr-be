// Code generated by entc, DO NOT EDIT.

package equipment

const (
	// Label holds the string label denoting the equipment type in the database.
	Label = "equipment"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldSku holds the string denoting the sku field in the database.
	FieldSku = "sku"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldRateHour holds the string denoting the rate_hour field in the database.
	FieldRateHour = "rate_hour"
	// FieldRateDay holds the string denoting the rate_day field in the database.
	FieldRateDay = "rate_day"
	// FieldDescription holds the string denoting the description field in the database.
	FieldDescription = "description"
	// EdgeKind holds the string denoting the kind edge name in mutations.
	EdgeKind = "kind"
	// EdgeStatus holds the string denoting the status edge name in mutations.
	EdgeStatus = "status"
	// Table holds the table name of the equipment in the database.
	Table = "equipment"
	// KindTable is the table that holds the kind relation/edge.
	KindTable = "equipment"
	// KindInverseTable is the table name for the Kind entity.
	// It exists in this package in order to avoid circular dependency with the "kind" package.
	KindInverseTable = "kinds"
	// KindColumn is the table column denoting the kind relation/edge.
	KindColumn = "kind_equipments"
	// StatusTable is the table that holds the status relation/edge.
	StatusTable = "equipment"
	// StatusInverseTable is the table name for the Statuses entity.
	// It exists in this package in order to avoid circular dependency with the "statuses" package.
	StatusInverseTable = "statuses"
	// StatusColumn is the table column denoting the status relation/edge.
	StatusColumn = "statuses_equipments"
)

// Columns holds all SQL columns for equipment fields.
var Columns = []string{
	FieldID,
	FieldSku,
	FieldName,
	FieldRateHour,
	FieldRateDay,
	FieldDescription,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "equipment"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"kind_equipments",
	"statuses_equipments",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultSku holds the default value on creation for the "sku" field.
	DefaultSku string
	// DefaultName holds the default value on creation for the "name" field.
	DefaultName string
	// DefaultDescription holds the default value on creation for the "description" field.
	DefaultDescription string
)
