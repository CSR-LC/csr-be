// Code generated by mockery v2.13.0-beta.1. DO NOT EDIT.

package passwordservice

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// PasswordReset is an autogenerated mock type for the PasswordReset type
type PasswordReset struct {
	mock.Mock
}

// SendResetPasswordLink provides a mock function with given fields: ctx, login
func (_m *PasswordReset) SendResetPasswordLink(ctx context.Context, login string) error {
	ret := _m.Called(ctx, login)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string) error); ok {
		r0 = rf(ctx, login)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// VerifyTokenAndSendPassword provides a mock function with given fields: ctx, tokenToVerify
func (_m *PasswordReset) VerifyTokenAndSendPassword(ctx context.Context, tokenToVerify string) error {
	ret := _m.Called(ctx, tokenToVerify)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string) error); ok {
		r0 = rf(ctx, tokenToVerify)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type NewPasswordResetT interface {
	mock.TestingT
	Cleanup(func())
}

// NewPasswordReset creates a new instance of PasswordReset. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewPasswordReset(t NewPasswordResetT) *PasswordReset {
	mock := &PasswordReset{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
