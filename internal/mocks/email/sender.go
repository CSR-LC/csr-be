// Code generated by mockery v2.13.1. DO NOT EDIT.

package email

import mock "github.com/stretchr/testify/mock"

// Sender is an autogenerated mock type for the Sender type
type Sender struct {
	mock.Mock
}

// SendNewPassword provides a mock function with given fields: _a0, userName, password
func (_m *Sender) SendNewPassword(_a0 string, userName string, password string) error {
	ret := _m.Called(_a0, userName, password)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string, string) error); ok {
		r0 = rf(_a0, userName, password)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SendRegistrationConfirmLink provides a mock function with given fields: _a0, userName, token
func (_m *Sender) SendRegistrationConfirmLink(_a0 string, userName string, token string) error {
	ret := _m.Called(_a0, userName, token)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string, string) error); ok {
		r0 = rf(_a0, userName, token)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SendResetLink provides a mock function with given fields: _a0, userName, token
func (_m *Sender) SendResetLink(_a0 string, userName string, token string) error {
	ret := _m.Called(_a0, userName, token)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string, string) error); ok {
		r0 = rf(_a0, userName, token)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewSender interface {
	mock.TestingT
	Cleanup(func())
}

// NewSender creates a new instance of Sender. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewSender(t mockConstructorTestingTNewSender) *Sender {
	mock := &Sender{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
