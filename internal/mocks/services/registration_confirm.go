// Code generated by mockery v2.13.1. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// RegistrationConfirm is an autogenerated mock type for the RegistrationConfirm type
type RegistrationConfirm struct {
	mock.Mock
}

// IsSendRequired provides a mock function with given fields:
func (_m *RegistrationConfirm) IsSendRequired() bool {
	ret := _m.Called()

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// SendConfirmationLink provides a mock function with given fields: ctx, login
func (_m *RegistrationConfirm) SendConfirmationLink(ctx context.Context, login string) error {
	ret := _m.Called(ctx, login)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string) error); ok {
		r0 = rf(ctx, login)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// VerifyConfirmationToken provides a mock function with given fields: ctx, token
func (_m *RegistrationConfirm) VerifyConfirmationToken(ctx context.Context, token string) error {
	ret := _m.Called(ctx, token)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string) error); ok {
		r0 = rf(ctx, token)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewRegistrationConfirm interface {
	mock.TestingT
	Cleanup(func())
}

// NewRegistrationConfirm creates a new instance of RegistrationConfirm. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewRegistrationConfirm(t mockConstructorTestingTNewRegistrationConfirm) *RegistrationConfirm {
	mock := &RegistrationConfirm{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
