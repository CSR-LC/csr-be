version: '3'
services:
  database:
    image: "postgres:latest"
    container_name: lc_postgres
    environment:
      - POSTGRES_PASSWORD=postgres # required
    volumes:
      - ./docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d # mount volume with init scripts
    ports:
      - "5432:5432"
    networks:
      - go-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U csr -p 5432"]
      interval: 2s
      timeout: 1s
      retries: 5

  goapp:
    image: go_run:${TAG}
    container_name: lc_golang
    environment:
      - DB_FILE=csr.db
      - SERVER_HOST=0.0.0.0
      - EMAIL_SENDER_WEBSITE_URL=https://csr.golangforall.com/
      - JWT_SECRET_KEY=1234567890
      - PASSWORD_RESET_EXPIRATION_MINUTES=100
      - EMAIL_SENDER_SERVER_HOST=smtp.yandex.ru
      - EMAIL_SENDER_SERVER_PORT=587
      - EMAIL_SENDER_PASSWORD=
      - EMAIL_SENDER_IS_SEND_REQUIRED=false
      - EMAIL_SENDER_FROM_ADDRESS=noreply.lkot@yandex.ru
      - EMAIL_SENDER_FROM_NAME="Lyonkin Kot"
      - PHOTOS_FOLDER=/equipments_photos
    depends_on:
      database:
        condition: service_healthy
    ports:
      - 8080:8080
    volumes:
      - ./equipments_photos:/equipments_photos
    restart: on-failure:3
    networks:
      - go-network

networks:
  go-network: